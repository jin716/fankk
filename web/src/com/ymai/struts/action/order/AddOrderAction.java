/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.ymai.struts.action.order;

import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.hibernate.Session;
import org.hibernate.Transaction;

import com.ymai.hibernate.Area;
import com.ymai.hibernate.HibernateSessionFactory;
import com.ymai.hibernate.Item;
import com.ymai.hibernate.Order;
import com.ymai.hibernate.OrderItems;
import com.ymai.hibernate.Store;
import com.ymai.hibernate.User;
import com.ymai.struts.CookieUtil;
import com.ymai.struts.action.user.UserFacade;
import com.ymai.struts.action.user.UserValidate;

/** 
 * MyEclipse Struts
 * Creation date: 04-27-2010
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class AddOrderAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		AddOrderForm aform = (AddOrderForm) form;
		Order order  = null;
		try{
			order = OrderLife.setOrderToSession(aform, request);
		}catch(Exception e){
			e.printStackTrace();
			return mapping.findForward("error");
		}
		CookieUtil.addAddressInCookies(order.getOrderAddr(), request, response);
		User user = UserValidate.getUser(request);
		try{
			if(CookieUtil.hasValidatePhone(order.getOrderTele(), request, response)){
				return toComfirm(mapping, form,request,response , order);
			}
			if(user==null||!order.getOrderTele().equals(user.getUserTele())){
				return toValidate(mapping,  form,request,  response , order);
			}
			else {
				return toComfirm(mapping, form,request,response , order);
			}
		}catch(Exception e){
			request.setAttribute("mess", e.getMessage());
			e.printStackTrace();
			return mapping.findForward("error");
		}
	}
	
	public ActionForward toValidate(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response , Order order ) throws Exception{
			UserValidate.setTele(request, order.getOrderTele());
			UserFacade.sendAcitveCode(request, order.getOrderTele());
			request.getSession().setAttribute("flag", 0);
			return mapping.findForward("comfirm");

	}
	
	public ActionForward toComfirm(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response , Order order ) throws Exception{
			request.getSession().setAttribute("flag", 1);
			return mapping.findForward("comfirm");
	}
}
/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.ymai.struts.action.order;

import java.util.List;

import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionServlet;
import org.hibernate.Hibernate;
import org.hibernate.Session;
import org.hibernate.criterion.Example;

import com.ymai.hibernate.Area;
import com.ymai.hibernate.Block;
import com.ymai.hibernate.HibernateSessionFactory;
import com.ymai.hibernate.Store;
import com.ymai.struts.CookieUtil;
import com.ymai.struts.Page;

/** 
 * MyEclipse Struts
 * Creation date: 04-20-2010
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class StoreListAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		String block_str = request.getParameter("block");
		String page_str = request.getParameter("page");
		String eachPage_str = request.getParameter("eachPage");
		Integer blockId = null;
		Integer pageNo = 1;
		Integer eachPage = 15;
		try{
			blockId = Integer.valueOf(block_str);
			if(page_str!=null)pageNo = Integer.valueOf(page_str);
			if(eachPage_str!=null)eachPage = Integer.valueOf(eachPage_str);
		
		}catch(Exception e){
			return null;
		}
		Session sess = HibernateSessionFactory.getSessionFactory().getCurrentSession();
		Block block = (Block) sess.get(Block.class, blockId);
		CookieUtil.setBlockInCookies(block, request, response);
		Page page = OrderFacade.getStorePage(blockId, pageNo, eachPage);
		request.setAttribute("block", block);
		request.setAttribute("page", page);
		return mapping.findForward("list");
	}
	

}
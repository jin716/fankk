/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.ymai.struts.action;

import java.io.IOException;
import java.net.URLDecoder;
import java.net.URLEncoder;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.hibernate.Session;

import com.ymai.hibernate.Area;
import com.ymai.hibernate.Block;
import com.ymai.hibernate.HibernateSessionFactory;
import com.ymai.hibernate.Store;
import com.ymai.struts.action.order.OrderFacade;
import com.ymai.struts.action.user.a.UserAdminFacade;
import com.ymai.struts.action.user.s.StoreFacade;

/** 
 * MyEclipse Struts
 * Creation date: 06-10-2010
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class MapAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws IOException 
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws IOException {
		String type = request.getParameter("type");
		String width = request.getParameter("width");
		String height = request.getParameter("height");
		request.setAttribute("height", height);
		request.setAttribute("width", width);
		if(type.equals("store"))
		{		
				Integer sid = Integer.valueOf(request.getParameter("store"));
				Store store = (Store)ActionFacade.get(Store.class, sid);
				request.setAttribute("store", store);
				return mapping.findForward("store");
		}
		if(type.equals("stores"))
		{		
				String str = request.getParameter("key");
				List list = UserAdminFacade.selectLikeStore(URLDecoder.decode(str,"utf-8"));
				System.out.println(str);
				request.setAttribute("store_list", list);
				return mapping.findForward("stores");
		}
		if(type.equals("area")){
			Integer aid = Integer.valueOf(request.getParameter("area"));
			Area area = (Area) ActionFacade.get(Area.class, aid);
			request.setAttribute("area", area);
			request.setAttribute("block_list", area.getBlocks());
			return mapping.findForward("area");
		}
		if(type.equals("block")){
			Integer block = Integer.valueOf(request.getParameter("block"));
			Block b = (Block) ActionFacade.get(Block.class, block);
			request.setAttribute("block", b);
			return mapping.findForward("block");
		}
		if(type.equals("storeAndBlocks")){
			Integer store = Integer.valueOf(request.getParameter("store"));
			Store s = (Store) ActionFacade.get(Store.class, store);
			request.setAttribute("store", s);
			return mapping.findForward("storeAndBlocks");
		}
		return null;
	}
}
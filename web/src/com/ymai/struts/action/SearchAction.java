/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.ymai.struts.action;

import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.hibernate.Session;
import org.hibernate.Transaction;
import org.sphx.api.SphinxException;

import com.ymai.hibernate.Block;
import com.ymai.hibernate.HibernateSessionFactory;
import com.ymai.hibernate.Store;
import com.ymai.hibernate.User;
import com.ymai.struts.FormUtil;
import com.ymai.struts.Page;
import com.ymai.tools.Json;

/** 
 * MyEclipse Struts
 * Creation date: 06-22-2010
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class SearchAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws UnsupportedEncodingException 
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws UnsupportedEncodingException {
		String type = request.getParameter("searchType");
		String key  = request.getParameter("KeyWord");;
		String page = request.getParameter("page");
		String area = request.getParameter("area");
		
		Integer areaId = null;
		Integer pageNum = 1;
		if(area!= null)areaId = Integer.valueOf(area);
		if(page!=null)try{pageNum = Integer.valueOf(page);}catch(Exception e){}
		String real_key = null;
		if(key == null||key.trim().length() == 0) real_key = null;
		else real_key =FormUtil.escape(URLDecoder.decode(key, "UTF-8"));//.replaceAll("\\+", " ");
		SearchThread thread = new SearchThread(real_key,Integer.valueOf(type));
		thread.start();
		if(type.equals("0")){
			Page res = null;
			request.setAttribute("key", key);
			request.setAttribute("real_key", real_key);
			try {
				res = SearchUtil.sreachBlock(real_key, areaId, pageNum, 30);
				if(res!=null&&res.getList().size() == 1){
					Block b  = (Block) res.getList().get(0);
					response.sendRedirect("../order/storeList_"+b.getBlockId());
					return null;
				}
				request.setAttribute("page", res);
				return mapping.findForward("blockList");
			} catch (Exception e) {
				request.setAttribute("page", null);
				e.printStackTrace();
				return mapping.findForward("blockList");
			}
		}
		if(type.equals("1")){
			Page res = null;
			request.setAttribute("key", key);
			request.setAttribute("real_key", real_key);
			try {
				
				res = SearchUtil.sreachStore(real_key, areaId, pageNum, 30);
				request.setAttribute("page", res);
			} catch (SphinxException e) {
				request.setAttribute("page", null);
				e.printStackTrace();
			}finally{
				return mapping.findForward("storeList");
			}
		}
		return null;
	}
}
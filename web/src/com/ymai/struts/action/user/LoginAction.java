/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.ymai.struts.action.user;

import java.io.IOException;
import java.util.List;

import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.hibernate.Hibernate;
import org.hibernate.Session;

import com.ymai.hibernate.HibernateSessionFactory;
import com.ymai.hibernate.User;
import com.ymai.hibernate.UserDAO;
import com.ymai.struts.CookieUtil;
import com.ymai.struts.FormUtil;

/** 
 * MyEclipse Struts
 * Creation date: 04-20-2010
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class LoginAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws IOException 
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws IOException {
		
		String name = request.getParameter("user_login_name");
		String password =request.getParameter("user_password");
		String keep = request.getParameter("keep");
		request.setAttribute("name", name);
		request.setAttribute("password", password);
		User user = UserValidate.login(request,name, password);
		if(user!=null){
			if(user.getUserState().equals(User.STATE_UN_ACTIVATE)){
				UserValidate.setUnactiveUser(request, user);
				return mapping.findForward("activate");
			}
			if(!user.getUserState().equals(User.STATE_ACTIVE)){
				request.setAttribute("mess","登陆失败,请重新登陆.");
				return mapping.findForward("error");
			}
			
			// 成功以后的动作
			if(keep!=null && keep.equals("true")){
				CookieUtil.setUserInCookies(name, password, response);
			}
			else{
				CookieUtil.removeUserInCookies(request, response);
			}
			UserValidate.setUser(request, user);
			if(user.getUserIsStore()){
				UserValidate.setStore(request, user);
				return mapping.findForward("store");
			}
			if(user.getUserIsAdmin()){
				return mapping.findForward("admin");
			}
			if(user.getUserIsUser())
				return mapping.findForward("user");
			
			
			return null;
			
		}
		request.setAttribute("mess","登陆失败,请重新登陆.");
		return mapping.findForward("error");
	}
	
}
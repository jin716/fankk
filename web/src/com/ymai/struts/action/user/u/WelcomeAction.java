/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.ymai.struts.action.user.u;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.ymai.hibernate.Duihuan;
import com.ymai.hibernate.HibernateSessionFactory;
import com.ymai.hibernate.Order;
import com.ymai.hibernate.User;
import com.ymai.policy.UserJifenPolicy;
import com.ymai.struts.Page;
import com.ymai.struts.action.ActionFacade;
import com.ymai.struts.action.order.OrderFacade;
import com.ymai.struts.action.order.OrderLife;
import com.ymai.struts.action.ordersystem.OSFacade;
import com.ymai.struts.action.user.UserFacade;
import com.ymai.struts.action.user.UserValidate;
import com.ymai.struts.action.user.a.UserAdminFacade;

/** 
 * MyEclipse Struts
 * Creation date: 06-01-2010
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class WelcomeAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		String action = request.getParameter("action");
		if(action == null){
			return welcome(mapping, form,request, response);
		}
		if(action.equals("userInfo")){
			return userInfo(mapping, form,request, response);
		}
		if(action.equals("userInfoEdit")){
			return userInfoEdit(mapping, form,request, response);
		}
		if(action.equals("password")){
			return password(mapping, form,request, response);
		}
		if(action.equals("orderList")){
			return orderList(mapping, form,request, response);
		}
		if(action.equals("orderListHistory")){
			return orderListHistory(mapping, form,request, response);
		}
		if(action.equals("order")){
			return order(mapping, form,request, response);
		}
		if(action.equals("jifen")){
			return jifen(mapping, form,request, response);
		}
		return null;
	}
	
	ActionForward welcome(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		User user = UserValidate.getUser(request);
		if(user == null)
			return mapping.findForward("login");
		String url = request.getParameter("url");
		if(url == null) url = "userInfo";
		request.setAttribute("url", url);
		return mapping.findForward("welcome");
	}
	
	ActionForward userInfo(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		User user = UserValidate.getUser(request);
		//小登录页面
		if(user == null)
			return mapping.findForward("userLogin");
		return mapping.findForward("userInfo");
	}
	
	ActionForward password(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		User user = UserValidate.getUser(request);
		//小登录页面
		if(user == null)
			return mapping.findForward("userLogin");
		return mapping.findForward("password");
	}
	ActionForward userInfoEdit(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		User user = UserValidate.getUser(request);
		//小登录页面
		if(user == null)
			return mapping.findForward("userLogin");
		return mapping.findForward("userInfoEdit");
	}
	
	ActionForward orderList(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		User user = UserValidate.getUser(request);
		//小登录页面
		if(user == null)
			return mapping.findForward("userLogin");
		String dos = request.getParameter("do");
		if(dos == null){
			Integer cPage = 1;
			Integer eachPage = 15;
			String c_page_str = request.getParameter("page");
			String e_page_str = request.getParameter("eachPage");		
			if(c_page_str!=null)cPage = Integer.valueOf(c_page_str);
			if(e_page_str!=null)eachPage = Integer.valueOf(e_page_str);
			Page page = null;
			page = UserAdminFacade.getOrder(request,null, null, cPage, eachPage);
			request.setAttribute("page", page);
			return mapping.findForward("orderList");
		}
		if(dos.equals("orderOk")){
			Integer oid = Integer.valueOf(request.getParameter("order"));
			try {
				OrderLife.orderOk(oid);
				UserValidate.reFreshUser(request);
			} catch (Exception e) {
				e.printStackTrace();
			}
			Integer cPage = 1;
			Integer eachPage = 15;
			String c_page_str = request.getParameter("page");
			String e_page_str = request.getParameter("eachPage");		
			if(c_page_str!=null)cPage = Integer.valueOf(c_page_str);
			if(e_page_str!=null)eachPage = Integer.valueOf(e_page_str);
			Page page = null;
			String s_date_str = request.getParameter("s_date");
			String e_date_str = request.getParameter("e_date");
			page = UserAdminFacade.getOrder(request,s_date_str, e_date_str, cPage, eachPage);
			request.setAttribute("page", page);
			request.setAttribute("s_date", s_date_str);
			request.setAttribute("e_date", e_date_str);
			return mapping.findForward("orderList");
		}
		return null;
	}
	
	ActionForward orderListHistory(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		User user = UserValidate.getUser(request);
		//小登录页面
		if(user == null)
			return mapping.findForward("userLogin");
		String dos = request.getParameter("do");
		if(dos == null){
			Integer cPage = 1;
			Integer eachPage = 15;
			String c_page_str = request.getParameter("page");
			String e_page_str = request.getParameter("eachPage");		
			if(c_page_str!=null)cPage = Integer.valueOf(c_page_str);
			if(e_page_str!=null)eachPage = Integer.valueOf(e_page_str);
			Page page = null;
			String s_date_str = request.getParameter("s_date");
			String e_date_str = request.getParameter("e_date");
			page = UserAdminFacade.getOrder(request,s_date_str, e_date_str, cPage, eachPage);
			request.setAttribute("page", page);
			request.setAttribute("s_date", s_date_str);
			request.setAttribute("e_date", e_date_str);
			return mapping.findForward("orderListHistory");
		}
		if(dos.equals("orderOk")){
			Integer oid = Integer.valueOf(request.getParameter("order"));
			try {
				OrderLife.orderOk(oid);
				UserValidate.reFreshUser(request);
			} catch (Exception e) {
			}
			Integer cPage = 1;
			Integer eachPage = 15;
			String c_page_str = request.getParameter("page");
			String e_page_str = request.getParameter("eachPage");		
			if(c_page_str!=null)cPage = Integer.valueOf(c_page_str);
			if(e_page_str!=null)eachPage = Integer.valueOf(e_page_str);
			Page page = null;
			String s_date_str = request.getParameter("s_date");
			String e_date_str = request.getParameter("e_date");
			page = UserAdminFacade.getOrder(request,s_date_str, e_date_str, cPage, eachPage);
			request.setAttribute("page", page);
			request.setAttribute("s_date", s_date_str);
			request.setAttribute("e_date", e_date_str);
			return mapping.findForward("orderListHistory");
		}
		return null;
	}
	
	ActionForward order(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		User user = UserValidate.getUser(request);
		//小登录页面
		if(user == null)
			return mapping.findForward("userLogin");
		return mapping.findForward("order");
	}
	
	ActionForward jifen(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		User user = UserValidate.getUser(request);
		//小登录页面
		if(user == null)
			return mapping.findForward("userLogin");
		List list = ActionFacade.session().createSQLQuery("select * from duihuan where user_id = :uid order by time desc limit 0,15")
		.addEntity(Duihuan.class).setInteger("uid", user.getUserId()).list();
		request.setAttribute("list", list);
		return mapping.findForward("jifen");
	}
}
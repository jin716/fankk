/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.ymai.struts.action.user;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import nl.captcha.Captcha;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.hibernate.Session;
import org.hibernate.Transaction;
import java.math.BigInteger;

import com.ymai.hibernate.HibernateSessionFactory;
import com.ymai.hibernate.User;

/** 
 * MyEclipse Struts
 * Creation date: 04-20-2010
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class RegisterAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		String action = request.getParameter("action");
		User user = null;
		if(action == null){
			RegisterForm rform = (RegisterForm) form;
			//查看验证码
			String vcode =UserValidate.getValidateCodeValue(request);
			if(!rform.getVcode().equalsIgnoreCase(vcode)){
				request.setAttribute("reg_mess","验证码不正确");
				request.getSession().removeAttribute("simpleCaptcha");
				return mapping.findForward("error");
			}
			request.getSession().removeAttribute("simpleCaptcha");
			//将未激活的用户存入数据库
			user = getUserFromRequest(form);
			try{
				//提交注册
				UserFacade.register(user);
				UserValidate.setUnactiveUser(request, user);
				
				//推广人
				String key = request.getParameter("key");
				if(key!=null){
					TGFacade.addUser(key, user);
				}
				
				//发送手机注册码
				UserFacade.sendAcitveCode(request, user.getUserTele());
			}catch(Exception e){
				System.err.println(e.getMessage());
				request.setAttribute("reg_mess",e.getMessage());
				return mapping.findForward("error");
			}
			UserValidate.setUser(request, user);
			return mapping.findForward("activate");
		}
		if(action.equals("changeTele")){
			try {
				UserFacade.changeTeleNum(request);
				return mapping.findForward("step_1");
			} catch (Exception e) {
				return null;
			}
		}		
		return null;
	}
	
	public User getUserFromRequest(ActionForm form){
		RegisterForm rform = (RegisterForm) form;
		User user = new User();
		user.setUserLoginName(rform.getUserName());
		user.setUserPassword(rform.getUserPassword());
		user.setUserIsAdmin(false);
		user.setUserIsUser(true);
		user.setUserIsStore(false);
		user.setUserState(User.STATE_UN_ACTIVATE);
		user.setUserTele(BigInteger.valueOf(rform.getUserTele()));
		user.setUserEmail(rform.getUserEmail());
		user.setUserJifen(50);
		return user;
	}
}
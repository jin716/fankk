/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.ymai.struts.action.user.s;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.ymai.hibernate.Item;
import com.ymai.hibernate.Store;
import com.ymai.hibernate.User;
import com.ymai.struts.Page;
import com.ymai.struts.action.order.OrderFacade;
import com.ymai.struts.action.ordersystem.OSFacade;
import com.ymai.struts.action.user.UserValidate;
import com.ymai.struts.action.user.a.UserAdminFacade;

/** 
 * MyEclipse Struts
 * Creation date: 06-04-2010
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class WelcomeAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		String action = request.getParameter("action");
		if(action == null){
			return welcome(mapping, form,request, response);
		}
		Store store = UserValidate.getStore(request);
		if(store == null)
			return mapping.findForward("noStoreFrame");
		if(action.equals("userInfo")){
			return userInfo(mapping, form,request, response);
		}
		if(action.equals("userInfoEdit")){
			return userInfoEdit(mapping, form,request, response);
		}
		if(action.equals("password")){
			return password(mapping, form,request, response);
		}
		if(action.equals("orderList")){
			return orderList(mapping, form,request, response);
		}
		if(action.equals("storeList")){
			return storeList(mapping, form,request, response);
		}
		if(action.equals("storeEdit")){
			return storeEdit(mapping, form,request, response);
		}
		if(action.equals("itemList")){
			return itemList(mapping, form,request, response);
		}
		if(action.equals("itemEdit")){
			return itemEdit(mapping, form,request, response);
		}
		if(action.equals("blockEdit")){
			return blockEdit(mapping, form,request, response);
		}
		if(action.equals("getOrder")){
			return getOrder(mapping, form,request, response);
		}
		return null;
	}
	
	ActionForward welcome(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		User user = UserValidate.getUser(request);
		if(user == null)
			return mapping.findForward("login");
		if(UserValidate.getStore(request)==null){
			return mapping.findForward("noStore");
		}
		String url = request.getParameter("url");
		if(url == null) url = "getOrder";
		request.setAttribute("url", url);
		return mapping.findForward("welcome");
	}
	
	ActionForward itemEdit(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		User user = UserValidate.getUser(request);
		//小登录页面
		if(user == null)
			return mapping.findForward("userLogin");
		String itemStr = request.getParameter("item");
		if(itemStr!=null){
			Store store = UserValidate.getStore(request);
			Integer itemId = Integer.valueOf(itemStr);
			Item item = (Item) StoreFacade.getItem(itemId);
			List type_list = OrderFacade.getItemTypes(store.getStoreId());
			request.setAttribute("store", store);
			request.setAttribute("item", item);
			request.setAttribute("type_list", type_list);
		}
		else{
			Store store = UserValidate.getStore(request);
			List type_list = OrderFacade.getItemTypes(store.getStoreId());
			request.setAttribute("store", store);
			request.setAttribute("type_list", type_list);
		}
		return mapping.findForward("itemEdit");
	}
	
	ActionForward userInfo(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		User user = UserValidate.getUser(request);
		//小登录页面
		if(user == null)
			return mapping.findForward("userLogin");
		return mapping.findForward("userInfo");
	}

	ActionForward itemList(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		User user = UserValidate.getUser(request);
		//小登录页面
		if(user == null)
			return mapping.findForward("userLogin");
		String page_str = request.getParameter("page");
		String type = request.getParameter("type");
		
		Integer eachPage = 10;
		Integer pageNo = 1;
		if(page_str != null) pageNo = Integer.valueOf(page_str);
		Store store = UserValidate.getStore(request);
		Page page = StoreFacade.getItemPage(store.getStoreId()	, pageNo, type, eachPage);
		request.setAttribute("store", store);
		request.setAttribute("page", page);
		return mapping.findForward("itemList");
	}
	
	ActionForward userInfoEdit(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		User user = UserValidate.getUser(request);
		//小登录页面
		if(user == null)
			return mapping.findForward("userLogin");
		return mapping.findForward("userInfoEdit");
	}
	
	ActionForward password(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		User user = UserValidate.getUser(request);
		//小登录页面
		if(user == null)
			return mapping.findForward("userLogin");
		return mapping.findForward("password");
	}

	ActionForward orderList(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		User user = UserValidate.getUser(request);
		//小登录页面
		if(user == null)
			return mapping.findForward("userLogin");
		
		Integer cPage = 1;
		Integer eachPage = 15;
		String c_page_str = request.getParameter("page");
		String e_page_str = request.getParameter("eachPage");
		String mode = request.getParameter("mode");
		
		if(c_page_str!=null)cPage = Integer.valueOf(c_page_str);
		if(e_page_str!=null)eachPage = Integer.valueOf(e_page_str);
		if(mode == null)mode = "byMonth";
		Page page = null;
		if(mode.equals("byInterval")){
			Integer month = 3;
			String s_date_str = request.getParameter("s_date");
			String e_date_str = request.getParameter("e_date");
			page = UserAdminFacade.getOrder(request,s_date_str, e_date_str, cPage, eachPage);
			request.setAttribute("page", page);
			request.setAttribute("s_date", s_date_str);
			request.setAttribute("e_date", e_date_str);
			return mapping.findForward("orderListInterval");
		}
		return null;
	}
	
	ActionForward storeList(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		User user = UserValidate.getUser(request);
		//小登录页面
		if(user == null)
			return mapping.findForward("userLogin");
		Store store = UserValidate.getStore(request);

		request.setAttribute("store", store);
		return mapping.findForward("storeEdit");
	}
	
	ActionForward storeEdit(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		User user = UserValidate.getUser(request);
		//小登录页面
		if(user == null)
			return mapping.findForward("userLogin");
		Store store = UserValidate.getStore(request);
		request.setAttribute("store", store);
		return mapping.findForward("storeEdit");
	}
	
	ActionForward blockEdit(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		User user = UserValidate.getUser(request);
		//小登录页面
		if(user == null)
			return mapping.findForward("userLogin");
		Store store = UserValidate.getStore(request);
		request.setAttribute("store", store);
		return mapping.findForward("blockEdit");
	}
	
	ActionForward getOrder(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		User user = UserValidate.getUser(request);
		//小登录页面
		if(user == null)
			return mapping.findForward("userLogin");
		
		Integer cPage = 1;
		Integer eachPage = 10;
		String c_page_str = request.getParameter("page");
		String e_page_str = request.getParameter("eachPage");
		String mode = request.getParameter("mode");
		
		if(c_page_str!=null)cPage = Integer.valueOf(c_page_str);
		if(e_page_str!=null)eachPage = Integer.valueOf(e_page_str);
		Page page = null;
		if(mode == null){mode = "byMonth";
			page = OSFacade.getOrderPage(request, cPage, eachPage);
			request.setAttribute("page", page);
			return mapping.findForward("getOrder");
		}
		else{
			String start = request.getParameter("s_date");
			String end = request.getParameter("e_date");
			page = StoreFacade.getOrder(request, start, end, cPage, eachPage);
			request.setAttribute("page", page);
			request.setAttribute("s_date", start);
			request.setAttribute("e_date", end);
			return mapping.findForward("orderListInterval");
		}
	}
	
}